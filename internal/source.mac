/* ソースから候補を取得する

引数	ohtorii_tools_dll_handle 	dllへのハンドル
		input_source_filename		ソースファイル名
		gather_arg					gather_candidates へ渡す引数

返値	成功	"1"
		失敗	"0"
*/

//==========================================================================
//	一時ファイル名
//==========================================================================
$g_candidate_filename="";


//==========================================================================
//メイン処理
//==========================================================================
#g_dll_ohtorii_tools=val(getarg(0));
call main getarg(1),getarg(2);
if(##return){
	endmacro "1";
}
endmacro "0";



//==========================================================================
//	ソースの生成処理
//==========================================================================
main:
	$$source_filename=$$1;
	$$arg=$$2;

	/*ソースのプロパティを取得する
	*/
	execmacro $$source_filename, str(#g_dll_ohtorii_tools), "get_property";
	$$ini=getresultex(-1);
	if($$ini==""){
		return false;
	}
	$$source_name=dllfuncstrw(#g_dll_ohtorii_tools,"SourcesCreate",$$ini);
	if($$source_name==""){
		return false;
	}
	$$ini="";//メモリ解放
	/*候補を作る
	*/
	##ret		=false;
	##success	= dllfuncw(#g_dll_ohtorii_tools, "SetCurrentSourceName", $$source_name);
	if(!##success){
		return false;
	}

	$$candidate_type = dllfuncstrw(#g_dll_ohtorii_tools,"SourcesGetCandidateType",$$source_name);
	if($$candidate_type=="list"){
		call GatherCandidatesFromList $$source_filename, $$arg;
		##ret = ##return;
	}else if($$candidate_type=="function"){
		execmacro $$source_filename, str(#g_dll_ohtorii_tools), "gather_candidates", $$arg;
		if(getresultex(-1)=="0"){
			##ret=false;
		}else{
			##ret=true;
		}
	}else{
		//未知の型名
		message sprintf("$$candidate_type が未知の型名だよ。\n"+
						"$$candidate_type=%s\n"	+
						"\n\n[todo]親切なメッセージにする", $$candidate_type);
		##ret=false;
	}
	##success = dllfuncw(#g_dll_ohtorii_tools, "ClearCurrentSourceName");
	return ##ret;


GatherCandidatesFromList:
	$$source_filename=$$1;
	$$arg=$$2;

	execmacro $$source_filename, str(#g_dll_ohtorii_tools), "gather_candidates", $$arg;
	$$candidates=getresultex(-1);

	execmacro currentmacrodirectory+"\\get_file_basename.mac",$$source_filename;
	$$source_name=getresultex(-1);
	if($$source_name==""){
		return false;
	}

	call LoadDengaku;
	##dll=##return;
	if(##dll==0){
		return false;
	}

	##success=true;
	$$token = dllfuncstr(##dll,"GETTOKEN",$$candidates,"\n\r");
	while (1) {
	    if($$token!=""){
			##ret=dllfuncw(#g_dll_ohtorii_tools, "CandidatesAppend", $$source_name, $$token, "");
			if(##ret==-1){
				##success=false;
				break;
			}
		}
	    if (dllfunc(##dll,"HASMORETOKENS") == 0) {
			break;
		}
	    $$token = dllfuncstr(##dll,"GETTOKEN","","\n\r");
	}

	call FreeDengaku  ##dll;
	return ##success;

	/*
	##ret=dllfuncw(#g_dll_ohtorii_tools,"WriteToFile",$$candidates_filename,$$list);
	if(! ##ret){
		deletefile $$candidates_filename;
		return "";
	}

	##ret=dllfuncw(#g_dll_ohtorii_tools,"SetCandidateList",$g_candidate_filename, $g_ini_name, $g_ini_description);
	if(! ##ret){
		return false;
	}
	return true;
*/

LoadDllFuzzy:
	##dll=loaddll(macrodir+"\\"+$$1);
	if(##dll!=0){
		return ##dll;
	}
	##dll=loaddll(hidemarudir+"\\"+$$1);
	if(##dll!=0){
		return ##dll;
	}
	message $$1+" のロードに失敗しました\n「秀丸エディタ・マクロ」のディレクトリに存在するか確認してください";
	return 0;

LoadDengaku:
	call LoadDllFuzzy("DengakuDLL.dll");
	return ##return;

FreeDengaku:
	freedll ##1;
	return;