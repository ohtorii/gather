/* window
*/

#g_dll_ohtorii_tools=val(getarg(30));
$label=getarg(0);
$arg=getarg(1);
call $label, $arg;
endmacro $$return;


do_action:
	$$action=$$1;
	call $$action;
	return $$return;

preview:
	##current_hidemaru	= hidemaruhandle(0);
	##first_item_index	= 0;
	##not_found 		= 0;

	//ウインドウを切り替える
	##hidemaru_handle=dllfuncw(#g_dll_ohtorii_tools,"GetSelectionActionWindowHandle",##first_item_index);
	if(##hidemaru_handle!=##not_found){
		setactivehidemaru ##hidemaru_handle;

		//少し待つ
		sleep 1500;

		//元のウインドウに切り替える
		setactivehidemaru ##current_hidemaru;
	}
	return "1";


jump:
	##first_item_index	= 0;
	##hidemaru_handle=dllfuncw(#g_dll_ohtorii_tools,"GetSelectionActionWindowHandle",##first_item_index);
	##ret = dllfuncw(#g_dll_ohtorii_tools,"SetCallBack_ProcessFinish",currentmacrofilename,"callback_jump",str(##hidemaru_handle));
	return str(##ret);


callback_jump:
	##handle=val($$1);
	setactivehidemaru ##handle;
	return str(##return);

only:
	return "1";


close:
	##first_item_index	= 0;
	##hidemaru_handle=dllfuncw(#g_dll_ohtorii_tools,"GetSelectionActionWindowHandle",##first_item_index);
	##ret = dllfuncw(#g_dll_ohtorii_tools,"SetCallBack_ProcessFinish",currentmacrofilename,"callback_close",str(##hidemaru_handle));
	return str(##ret);

callback_close:
	##handle=val($$1);
	##current_hidemaru = hidemaruhandle(0);

	//ウインドウハンドルを集める
	setactivehidemaru ##handle;
	##count = tabtotal;
	##i = 0;
	while( ##i < ##count ) {
	    ##tab_handle[##i] = gettabhandle( true, 0, ##i );
	    ##i = ##i + 1;
	}


	//ウインドウを閉じる
	setactivehidemaru ##current_hidemaru;
	##i = 0;
	while( ##i < ##count ) {
		if(updated[##tab_handle[##i]]){
			//ファイルが更新されているため無視する。（ユーザーが明示的に閉じる）
		}else{
			closehidemaru ##tab_handle[##i];
		}
	    ##i = ##i + 1;
	}

	return str(##return);
