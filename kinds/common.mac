/* common.

(引数)
	リクエスト	...

（説明）
	第二引数以降はリクエストの種類にり異なります。


（リクエストの種類）
	- get_property
	- do_action

（リクエスト毎の引数）
	- get_property
		[0]	ohtorii_tools_dll_handle
		[1] "get_property"

	- do_action
		[0]	ohtorii_tools_dll_handle
		[1]	"do_action"
		[2]	アクション名
*/


////////////////////////////////////////////////////////////////////////////
//	グローバル変数
////////////////////////////////////////////////////////////////////////////
#g_dll_ohtorii_tools=0;
#g_dll_dengaku		=0;
#g_dll_output_panel	=0;


////////////////////////////////////////////////////////////////////////////
//	メイン処理
////////////////////////////////////////////////////////////////////////////
#g_dll_ohtorii_tools=val(getarg(30));
$label=getarg(0);
$arg1=getarg(1);
$arg2=getarg(2);
$arg3=getarg(3);
$arg4=getarg(4);
$arg5=getarg(5);

debuginfo "kinds/commonm.mac";
debuginfo "  #g_dll_ohtorii_tools="+getarg(30);
$g_root_macro_directory =dllfuncstrw(#g_dll_ohtorii_tools,"StaticStatusGetRootMacroDirectory");
debuginfo "  -> OK";

call $label, $arg1, $arg2, $arg3, $arg4, $arg5, $arg6;
endmacro $$return;



////////////////////////////////////////////////////////////////////////////
//	Request.
////////////////////////////////////////////////////////////////////////////
/*Todo コマンドラインのマクロと組み合わせる
ex	Input the escaped candidate text into command line.
*/



do_action:
	$$action=$$1;
	call $$action;
	return $$return;


////////////////////////////////////////////////////////////////////////////
//	Action.
////////////////////////////////////////////////////////////////////////////
nop:
	return "1";

echo:
	//debug用途
	##output_dll=loaddll("HmOutputPane.dll");
	if(!result){
		return "0";
	}

	//アウトプット枠クリア
	##h=dllfunc(##output_dll,"GetWindowHandle",hidemaruhandle(0));
	##ret=sendmessage(##h,0x111/*WM_COMMAND*/,1009,0);//1009=クリア

	//文字列を表示する
	##count=dllfuncw(#g_dll_ohtorii_tools,"GetSelectionCount");
	##i=0;
	while(##i<##count){
		$$source_name	=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionSourceName",	##i);
		$$text			=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionText",		##i);
		$$action_directory_name	=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionActionDirectoryName",##i);
		$$action_file_name		=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionActionFileName",##i);
		##line			= dllfuncw(#g_dll_ohtorii_tools,"GetSelectionActionLine",##i);
		##column		= dllfuncw(#g_dll_ohtorii_tools,"GetSelectionActionColumn",##i);
		$$description	=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionDescription",##i);


		$$info=sprintf(R"([%d/%d] {"text": "%s", "source_name": "%s", "action_directory_name": "%s", "action_file_name": "%s", "action_line": %d, "action_column": %d, "description": "%s"})"+"\r\n", ##i+1,##count, $$text, $$source_name,  $$action_directory_name,$$action_file_name,##line, ##column, $$description);
		##ret=dllfunc(##output_dll,"Output",hidemaruhandle(0),$$info);
		//##ret=dllfunc(##output_dll,"Output",hidemaruhandle(0),sprintf("[%d/%d] (%s) <%s> <%s> %s %s\n",##i+1,##count,$$source_name,$$action_directory_name,$$action_file_name,$$text,$$description));
		##i = ##i + 1;
	}
	freedll ##output_dll;
	return "1";

/*ex:
	return  "1";*/

insert:
	execmacro $g_root_macro_directory+"\\internal\\util_foreach_join.mac", str(#g_dll_ohtorii_tools), currentmacrofilename, "insert_proc";
	return getresultex(-1);


overwrite:
	execmacro $g_root_macro_directory+"\\internal\\util_foreach_join.mac", str(#g_dll_ohtorii_tools), currentmacrofilename, "overwrite_proc";
	return getresultex(-1);


preview:
	//debug用途
	if(#g_dll_output_panel==0){
		#g_dll_output_panel=loaddll("HmOutputPane.dll");
		if(#g_dll_output_panel==0){
			return "0";
		}
	}

	//アウトプット枠クリア
	##h=dllfunc(#g_dll_output_panel,"GetWindowHandle",hidemaruhandle(0));
	##ret=sendmessage(##h,0x111/*WM_COMMAND*/,1009,0);//1009=クリア
	execmacro $g_root_macro_directory+"\\internal\\util_foreach_join.mac", str(#g_dll_ohtorii_tools), currentmacrofilename, "preview_proc";
	$$ret=getresultex(-1);
	freedll #g_dll_output_panel;
	#g_dll_output_panel=0;
	return $$ret;


yank:
	setclipboard "";
	execmacro $g_root_macro_directory+"\\internal\\util_foreach_join.mac", str(#g_dll_ohtorii_tools), currentmacrofilename, "yank_proc";
	return getresultex(-1);


yank_escape:
	setclipboard "";
	execmacro $g_root_macro_directory+"\\internal\\util_foreach_join.mac", str(#g_dll_ohtorii_tools), currentmacrofilename, "yank_escape_proc";
	return getresultex(-1);


////////////////////////////////////////////////////////////////////////////
//	Proc.
////////////////////////////////////////////////////////////////////////////
insert_proc:
	insert($$2);
	return;

overwrite_proc:
	overwrite($$2);
	return;

preview_proc:
	##is_separetor = ##1;
	if(#g_dll_output_panel==0){
		#g_dll_output_panel=loaddll("HmOutputPane.dll");
		if(#g_dll_output_panel==0){
			return "0";
		}
	}
	if(##is_separetor){
		##ret=dllfunc(#g_dll_output_panel,"Output",hidemaruhandle(0),"\r\n");
	}else{
		##ret=dllfunc(#g_dll_output_panel,"Output",hidemaruhandle(0),$$2);
	}
	freedll #g_dll_output_panel;
	#g_dll_output_panel=0;
	return ;


yank_proc:
	##is_separetor = val($$1);
	if(##is_separetor){
		addclipboard "\x0D\x0A";
	}else{
		addclipboard $$2;
	}
	return ;


yank_escape_proc:
	##is_separetor = val($$1);
	if(##is_separetor){
		addclipboard "\x0D\x0A";
	}else{
		call Escape $$2;
		addclipboard $$return;
	}
	return ;


////////////////////////////////////////////////////////////////////////////
//	Utility.
////////////////////////////////////////////////////////////////////////////
Escape:
	if(#g_dll_dengaku==0){
		execmacro $g_root_macro_directory+"\\internal\\load_dll.mac","DengakuDLL.dll";
		#g_dll_dengaku=val(getresultex(-1));
		if(#g_dll_dengaku==0){
			return "";
		}
	}
	$$r=$$1;
	$$r = dllfuncstr(#g_dll_dengaku,"GSUB", $$r, "\\",	"\\\\", -1);
	$$r = dllfuncstr(#g_dll_dengaku,"GSUB", $$r, "\"",	"\\\"", -1);
	$$r = dllfuncstr(#g_dll_dengaku,"GSUB", $$r, "\x07", "\\a", -1);
	$$r = dllfuncstr(#g_dll_dengaku,"GSUB", $$r, "\x08", "\\b", -1);
	$$r = dllfuncstr(#g_dll_dengaku,"GSUB", $$r, "\t",   "\\t", -1);
	$$r = dllfuncstr(#g_dll_dengaku,"GSUB", $$r, "\n",   "\\n", -1);
	$$r = dllfuncstr(#g_dll_dengaku,"GSUB", $$r, "\x0b", "\\v", -1);
	$$r = dllfuncstr(#g_dll_dengaku,"GSUB", $$r, "\r",   "",    -1);

	freedll #g_dll_dengaku;
	#g_dll_dengaku=0;

	return $$r;

