/**/

////////////////////////////////////////////////////////////////////////////
//	グローバル変数
//////////////////////////////////////////////////////////////////////////
$g_separator="\x0B";	//垂直タブ
$g_marker="#layer0";


////////////////////////////////////////////////////////////////////////////
//	メイン処理
////////////////////////////////////////////////////////////////////////////
#g_dll_ohtorii_tools=val(getarg(30));
$label=getarg(0);
$arg1=getarg(1);
$arg2=getarg(2);
$arg3=getarg(3);
$arg4=getarg(4);
$arg5=getarg(5);

$g_root_macro_directory =dllfuncstrw(#g_dll_ohtorii_tools,"StaticStatusGetRootMacroDirectory");


call $label, $arg1, $arg2, $arg3, $arg4, $arg5 ;
endmacro $$return;



////////////////////////////////////////////////////////////////////////////
//	Request.
////////////////////////////////////////////////////////////////////////////
/*
実装	アクション
○		function! s:kind.action_table.open.func(candidates) abort "{{{
○		function! s:kind.action_table.preview.func(candidate) abort "{{{
		function! s:kind.action_table.mkdir.func(candidate) abort "{{{
		function! s:kind.action_table.rename.func(candidates) abort "{{{
		function! s:kind.action_table.backup.func(candidates) abort "{{{
		function! s:kind.action_table.read.func(candidates) abort "{{{
		function! s:kind.action_table.wunix.func(candidates) abort "{{{
		function! s:kind.action_table.diff.func(candidates) abort "{{{
		function! s:kind.action_table.dirdiff.func(candidates) abort "{{{
		function! s:kind.action_table.grep.func(candidates) abort "{{{
		function! s:kind.action_table.vimgrep.func(candidates) abort "{{{
		function! s:kind.action_table.find.func(candidate) abort "{{{
		function! s:kind.action_table.argadd.func(candidates) abort "{{{

*/

do_action:
	$$action=$$1;
	call $$action;
	return $$return;

////////////////////////////////////////////////////////////////////////////
//	Action.
////////////////////////////////////////////////////////////////////////////
open:
	##new_hidemaru_handle=0;
	##current_hidemaru_handle=hidemaruhandle(0);
	##count=dllfuncw(#g_dll_ohtorii_tools,"GetSelectionCount");
	##i=0;
	while(##i < ##count){
		$$text=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionActionFileName",##i);
		if($$text!=""){
			if(existfile($$text)){
				if((existfile($$text,1)&0x00000010) == 0){
					//パスが存在している、かつ、ファイルである
					openfile $$text;
					##new_hidemaru_handle = hidemaruhandle(0);
					setactivehidemaru(##current_hidemaru_handle);
				}
			}
		}

		##i = ##i + 1;
	}
	##ret = dllfuncw(#g_dll_ohtorii_tools,"StaticStatusSetHidemaruHandleToForceAtEndProcess",##new_hidemaru_handle);

	return "1";


insert_directory:
	execmacro $g_root_macro_directory+"\\internal\\util_foreach_join.mac", str(#g_dll_ohtorii_tools), currentmacrofilename, "insert_directory_proc";
	return getresultex(-1);


overwrite_directory:
	execmacro $g_root_macro_directory+"\\internal\\util_foreach_join.mac", str(#g_dll_ohtorii_tools), currentmacrofilename, "overwrite_directory_proc";
	return getresultex(-1);


preview:
	##first_item_index	= 0;
	$$filename=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionActionFileName",##first_item_index);
	##ret=dllfuncw(#g_dll_ohtorii_tools, "AutoPreviewRegist", $$filename);
	return "1";


preview_ng:
	##old_hidemaruhandle=hidemaruhandle(0);
	##first_item_index	= 0;
	$$filename=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionActionFileName",##first_item_index);
	##file_flag=existfile($$filename,1);
	if(##file_flag==0){
		//ファイルが存在しない
		return "0";
	}
	if(##file_flag&0x00000010){
		//ディレクトリ
		return "0";
	}

	$$args = sprintf(R"(/rr /h /n /m2 /I0,400,0 /x?"%s" "%s")",currentmacrodirectory+"\\_preview.mac", $$filename);
	openfile $$args, noaddhist;
	if(!result){
		debuginfo "[failed] openfile.";
		return "0";
	}
	##current_hidemaruhandle=hidemaruhandle(0);
	setactivehidemaru(##old_hidemaruhandle);
	closehidemaruforced(##current_hidemaruhandle);
	return "1";


preview_oshii:
	##first_item_index	= 0;
	$$filename=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionActionFileName",##first_item_index);
	##file_flag=existfile($$filename,1);
	if(##file_flag==0){
		//ファイルが存在しない
		return "0";
	}
	if(##file_flag&0x00000010){
		//ディレクトリ
		return "0";
	}
	##old_hidemaruhandle=hidemaruhandle(0);

	##working_hidemaru_handle = val(getstaticvariable("Unity.file_base.preview",0));
	$$args="/rr /h /n /m2 /I0,400,0 "+$$filename;
	if(##working_hidemaru_handle==0){
		openfile $$args, noaddhist;
		if(!result){
			debuginfo "[failed] openfile.";
			setactivehidemaru(##old_hidemaruhandle);
			return "0";
		}
		##working_hidemaru_handle=hidemaruhandle(0);
	}else{
		setactivehidemaru(##working_hidemaru_handle);
		clearupdated;
		loadfile $$filename,noaddhist;
		if(!result){
			debuginfo "[failed] loadfile.";
			setactivehidemaru(##old_hidemaruhandle);
			return "0";
		}
	}
	gofiletop;
	beginsel;
	moveto2 column,lineno+40;
	golineend2;
	endsel;
	$$text=gettext2(seltopcolumn,seltoplineno,selendcolumn,selendlineno );

	setactivehidemaru(##old_hidemaruhandle);
	//closehidemaruforced(##current_hidemaruhandle);
	setstaticvariable "Unity.file_base.preview",str(##working_hidemaru_handle),0;

	##output_dll=loaddll("HmOutputPane.dll");
	if(##output_dll==0){
		debuginfo "[failed] Load HmOutputPane.dll";
		return "0";
	}

	##WM_COMMAND=0x111;
	##window=dllfunc(##output_dll,"GetWindowHandle",hidemaruhandle(0));
	##ret=sendmessage(##window,##WM_COMMAND,1009 ,0);//1009=クリア
	##ret=dllfunc(##output_dll, "Output",hidemaruhandle(0),$$text);
	##ret=sendmessage(##window,##WM_COMMAND,1015 ,0);//1015=先頭にカーソル移動
	freedll ##output_dll;
	return "1";


preview_old:
	/*ファイル内容のプレビュー
	*/
	##first_item_index	= 0;
	$$text=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionActionFileName",##first_item_index);
	$$command = sprintf(R"(PowerShell.exe -Command "& {Get-Content "%s" | Select-Object -first 100}")", $$text);
	runex $$command
			, 1 			//sync	  0:async 1:sync
			, 0, "" 		//stdin   0:none 1:auto 2:file 3:(reserve) 4:all 5:select
			, 7, "" 		//stdout  0:none 1:auto 2:file 3:add file  4:new 5:insert 6:replace
			, 1, "" 		//stderr  0:none 1:=out 2:file 3:add file  4:new 5:insert 6:replace
			, 0, "" 		//folder  0:none 1:current 2:specify 3:(reserve) 4:exe's folder
			, 2 			//show	  0:auto 1:show 2:hide
			, 1 			//nodraw  0:draw 1:no draw
			, 0 			//unicode 0:ansi 2:unicode
			;

	##output_dll=loaddll("HmOutputPane.dll");
	if(!result){
		return "0";
	}
	##parent=dllfunc(##output_dll,"GetWindowHandle",hidemaruhandle(0));
	##ret=sendmessage(##parent,0x111/*WM_COMMAND*/,1015 ,0);//1015=先頭にカーソル移動
	freedll ##output_dll;
	return "1";


////////////////////////////////////////////////////////////////////////////
//	Proc.
////////////////////////////////////////////////////////////////////////////
overwrite_directory_proc:
	if((strstr($$2,"\\")!=-1) || (strstr($$2,"/")!=-1)){
		//ディレクトリ区切りあり
		execmacro $g_root_macro_directory+"\\internal\\util_get_parent_folder_name.mac",$$2;
		$$parent_folder=getresultex(-1);
		insert($$parent_folder);
	}else{
		//ディレクトリ区切りなし
		overwrite($$2);
	}
	return ;


insert_directory_proc:
	if((strstr($$2,"\\")!=-1) || (strstr($$2,"/")!=-1)){
		//ディレクトリ区切りあり
		execmacro $g_root_macro_directory+"\\internal\\util_get_parent_folder_name.mac",$$2;
		$$parent_folder=getresultex(-1);
		insert($$parent_folder);
	}else{
		//ディレクトリ区切りなし
		insert($$2);
	}
	return ;

