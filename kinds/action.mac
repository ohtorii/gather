/*アクションの実行
*/
$g_root_macro_directory=getstaticvariable( "$g_root_macro_directory", 0 );
#g_dll_ohtorii_tools=val(getarg(0));
$label=getarg(1);
$arg=getarg(2);

debuginfo 1;
debuginfo "======= action.mac =========";
debuginfo "$label="+$label;
debuginfo "$arg="+$arg;

call $label, $arg;
endmacro $$return;



////////////////////////////////////////////////////////////////////////////
//	Request.
////////////////////////////////////////////////////////////////////////////
get_property:
	return R"([property]
name=action
description=action.
default_action=do
inheritance=

'アクション
[action.do]
'表示に使用する名前
name=do
'秀丸マクロのラベル名
function=do
'アクションの説明
description=Do.
'アクション実行後に終了するかどうか
is_quit=false
'アクションを複数選択に対して実行するかどうか
is_multi_selectable=false
)";

do_action:
	$$action=$$1;
	debuginfo 1;
	debuginfo "action.mac: do_action $$action="+$$action;
	call $$action;
	return $$return;

do:
	debuginfo 1;
	debuginfo "action.mac: DO!!!!";
	
	/////////////////////////////////////////////////////////////////////////
	//アクションを取得する
	/////////////////////////////////////////////////////////////////////////
	##candidate_index=dllfuncw(#g_dll_ohtorii_tools,"RefineSearchGetFirstSelectionCandidateIndex");
	if(##candidate_index==-1){
		return "0";
	}
	$$source_name	=dllfuncstrw(#g_dll_ohtorii_tools,"CandidatesGetSourceName",##candidate_index);
	$$action_name	=dllfuncstrw(#g_dll_ohtorii_tools,"CandidatesGetText",##candidate_index);
	$$user_data_kind=dllfuncstrw(#g_dll_ohtorii_tools,"CandidatesGetUserDataString",##candidate_index,"__kind__","");
	$$default_kind	=dllfuncstrw(#g_dll_ohtorii_tools,"SourcesGetDefaultKind",$$source_name);
	
	$$kind_filename=$g_root_macro_directory+"\\kinds\\"+$$user_data_kind+".mac";
	
	
	/////////////////////////////////////////////////////////////////////////
	//選択ファイルに対してアクションを実行する
	/////////////////////////////////////////////////////////////////////////
	//選択ファイルを取得するためにコンテキストを１つ戻す（ただしオブジェクトの破棄を行わない）
	##exist_context_then_delete=false;
	##ret=dllfuncw(#g_dll_ohtorii_tools,"PopContext", ##exist_context_then_delete);
	if(! ##ret){
		return "0";
	}
	
	//call "echo";
	execmacro $$kind_filename, str(#g_dll_ohtorii_tools), "do_action", $$action_name;
	$$action_result = getresultex(-1);
		
	//コンテキストを元に戻す
	##ret=dllfuncw(#g_dll_ohtorii_tools,"PushContext", ##exist_context_then_delete);
	if(! ##ret){
		return "0";
	}
	
	/*if($$kind.action.is_quit){
		quitフラグを立てる（）
		setstaticvariable "$is_quit", "1",0;

	}*/
	
	return $$action_result;


echo:
	//debug用途
	##output_dll=loaddll("HmOutputPane.dll");
	if(!result){
		return "0";
	}
	
	//アウトプット枠クリア
	##h=dllfunc(##output_dll,"GetWindowHandle",hidemaruhandle(0));
	##ret=sendmessage(##h,0x111/*WM_COMMAND*/,1009,0);//1009=クリア
	
	//文字列を表示する
	##count=dllfuncw(#g_dll_ohtorii_tools,"GetSelectionCount");
	##i=0;
	while(##i<##count){
		$$source_name	=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionSourceName",	##i);
		$$text			=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionText",		##i);
		$$description	=dllfuncstrw(#g_dll_ohtorii_tools,"GetSelectionDescription",##i);
		
		##ret=dllfunc(##output_dll,"Output",hidemaruhandle(0),sprintf("[%d/%d] (%s) %s %s\n",##i+1,##count,$$source_name,$$text,$$description));
		##i = ##i + 1;
	}
	freedll ##output_dll;
	return "1";
