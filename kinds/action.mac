/*アクションの実行
*/

#g_dll_ohtorii_tools=val(getarg(30));
$label				=getarg(0);
$arg				=getarg(1);

#g_target_hidemaruhandle=dllfuncw(#g_dll_ohtorii_tools,"StaticStatusGetTargetHidemaruHandle");
$g_root_macro_directory =dllfuncstrw(#g_dll_ohtorii_tools,"StaticStatusGetRootMacroDirectory");

call $label, $arg;
endmacro $$return;



////////////////////////////////////////////////////////////////////////////
//	Request.
////////////////////////////////////////////////////////////////////////////
do_action:
	$$action=$$1;
	call $$action;
	return $$return;

do:
	debuginfo 1;
	debuginfo "kinds/action.mac  do";
	/////////////////////////////////////////////////////////////////////////
	//アクションを取得する
	/////////////////////////////////////////////////////////////////////////
	##candidate_index=dllfuncw(#g_dll_ohtorii_tools,"RefineSearchGetFirstSelectionCandidateIndex");
	if(##candidate_index==-1){
		debuginfo "  do -> false @ 0";
		return "0";
	}
	$$source_name	=dllfuncstrw(#g_dll_ohtorii_tools,"CandidatesGetSourceName",	##candidate_index);
	$$action_name	=dllfuncstrw(#g_dll_ohtorii_tools,"CandidatesGetText",			##candidate_index);
	$$user_data_kind=dllfuncstrw(#g_dll_ohtorii_tools,"CandidatesGetUserDataString",##candidate_index,"__kind__","");
	$$kind_filename=$g_root_macro_directory+"\\kinds\\"+$$user_data_kind+".mac";

	/////////////////////////////////////////////////////////////////////////
	//選択ファイルに対してアクションを実行する
	/////////////////////////////////////////////////////////////////////////
	//選択ファイルを取得するためにコンテキストを１つ戻す（オブジェクトは破棄しない）
	##exist_context_then_delete=false;
	##ret=dllfuncw(#g_dll_ohtorii_tools,"PopContext", ##exist_context_then_delete);
	if(! ##ret){
		debuginfo "  do -> false @ 1";
		return "0";
	}

	call pre_action $$user_data_kind,$$action_name;
	if(1){
		$$args[0]=str(#g_dll_ohtorii_tools);
		$$args[1]="0";	//hm_process.dll
		$$args[20]="exec_action";
		$$args[21]=$$kind_filename;
		$$args[22]=$$user_data_kind;
		$$args[23]=$$action_name;
		execmacro $g_root_macro_directory+"\\internal\\action.mac", $$args, 31;
		$$action_result=getresultex(-1);
	}else{
		//旧コード、
		//常にis_edit==0となる不具合あり
		call exec_action, $$kind_filename, $$action_name;
		$$action_result=$$return;
	}

	//コンテキストを元に戻す
	##ret=dllfuncw(#g_dll_ohtorii_tools,"PushContext", ##exist_context_then_delete);
	if(! ##ret){
		debuginfo "  do -> false @ 2";
		return "0";
	}

	debuginfo "  IsQuit start.";
	execmacro $g_root_macro_directory+"\\internal\\is_quit.mac", str(#g_dll_ohtorii_tools),$$user_data_kind, $$action_name;
	$$is_quit = getresultex(-1);
	debuginfo "  IsQuit finish. $$is_quit="+$$is_quit;
	##ret = dllfuncw(#g_dll_ohtorii_tools,"StaticStatusSetIsQuit",val($$is_quit));
	debuginfo "  do -> true";
	return $$action_result;


pre_action:
	/*アクションを呼び出す前の処理。
	内部状態(Status)を初期値に戻します。
	*/
	$$default_kind	=$$1;
	$$default_action=$$2;
	##previous_context=dllfuncw(#g_dll_ohtorii_tools,"GetCurrentContext") - 1;
	##ret=dllfuncw(#g_dll_ohtorii_tools,"StatusUpdate",$$default_kind, $$default_action,##previous_context);
	return ##ret;


exec_action:
	debuginfo "kinds/action.mac exec_action";
	$$kind_filename	=$$1;
	$$action_name	=$$2;

	debuginfo "  $$kind_filename="+$$kind_filename;
	debuginfo "  $$action_name="+ $$action_name;

	$$args[0]="do_action";
	$$args[1]=$$action_name;
	$$args[30]=str(#g_dll_ohtorii_tools);
	execmacro $$kind_filename, $$args, 31;
	$$action_result = getresultex(-1);
	return $$action_result;
